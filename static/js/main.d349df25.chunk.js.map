{"version":3,"sources":["reducer/index.js","store.js","components/service-context/index.js","actions/index.js","components/command-field/index.js","components/hoc/with-fixer-service.js","components/command-field/command-field.jsx","components/outputs/for-add-list-command.jsx","components/outputs/for-total-command.jsx","components/outputs/for-wrong-command.jsx","components/output-area/index.js","components/output-area/output-area.jsx","components/app/index.js","components/app/app.jsx","components/error-indicator/index.js","components/error-indicator/error-indicator.jsx","components/error-boundry/index.js","components/error-boundry/error-boundry.jsx","index.js","fixer-service.js"],"names":["initialState","lastCommand","isWrongCommand","loading","error","expensesData","valCode","currencyValues","rates","totalValue","value","currency","reducer","state","action","type","addDate","payload","addValue","addCurrency","toUpperCase","addProductName","slice","join","idx","findIndex","item","date","newExpense","hasOwnProperty","expenseBody","updatedExpense","sortedExpenses","sort","a","b","clearedDate","clearIdx","toSubtract","currentCurVal","subtractedValue","i","length","key","curNeeded","curCurrent","otherRate","resValue","toFixed","resRates","store","createStore","applyMiddleware","thunk","React","createContext","ServiceProvider","Provider","ServiceConsumer","Consumer","addCommand","listCommand","clearCommand","totalCommand","curCode","wrongCommand","fetchRate","service","dispatch","getRates","then","res","catch","rateDataError","CommandField","Wrapped","props","fixerService","withFixerService","connect","bindActionCreators","useState","commandText","setCommandText","commandBody","split","commandType","toLowerCase","expenseDate","addCurCode","totalCurCode","useEffect","className","onSubmit","e","preventDefault","isNaN","onChange","target","placeholder","map","expense","ForWrongCommand","OutputArea","App","ErrorIndicator","ErrorBoundry","hasError","this","setState","children","Component","_apiUrl","getResource","url","fetch","ok","Error","status","json","data","_transformRate","fetchedObj","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d349df25.chunk.js","sourcesContent":["const initialState = {\r\n  lastCommand: null,\r\n  isWrongCommand: false,\r\n  loading: false,\r\n  error: false,\r\n  expensesData: [],\r\n  valCode: null,\r\n  currencyValues: {},\r\n  rates: [],\r\n  totalValue: {\r\n    value: null,\r\n    currency: null\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_COMMAND\":\r\n\r\n      //formate for \"add\" command : \"add yyyy-mm-dd value carrencyCode productName\"\r\n\r\n      const addDate = action.payload[1];\r\n      const addValue = action.payload[2];\r\n      const addCurrency = action.payload[3].toUpperCase();\r\n      const addProductName = action.payload.slice(4).join(\" \");\r\n      const idx = state.expensesData.findIndex((item) => item.date === addDate);\r\n\r\n      const newExpense = [addProductName, addValue, addCurrency];\r\n      let currencyValues = state.currencyValues;\r\n\r\n      if(!currencyValues.hasOwnProperty(addCurrency)){\r\n        currencyValues[addCurrency] = +addValue;\r\n      }else{\r\n        currencyValues[addCurrency] += +addValue;\r\n      }\r\n\r\n      if (idx === -1) {\r\n        return {\r\n          ...state,\r\n          lastCommand: \"add\",\r\n          isWrongCommand: false,\r\n          currencyValues: currencyValues,\r\n          expensesData: [\r\n            ...state.expensesData,\r\n            {\r\n              date: addDate,\r\n              expenseBody: [newExpense],\r\n            },\r\n          ],\r\n        };\r\n      }\r\n\r\n      const updatedExpense = {\r\n        date: state.expensesData[idx].date,\r\n        expenseBody: [...state.expensesData[idx].expenseBody, newExpense],\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        lastCommand: \"add\",\r\n        isWrongCommand: false,\r\n        currencyValues: currencyValues,\r\n        expensesData: [\r\n          ...state.expensesData.slice(0, idx),\r\n          updatedExpense,\r\n          ...state.expensesData.slice(idx + 1),\r\n        ],\r\n      };\r\n\r\n    case \"LIST_COMMAND\":\r\n\r\n      const sortedExpenses = [...state.expensesData].sort((a, b) => {\r\n        if (a.date < b.date) {\r\n          return -1;\r\n        }\r\n        if (a.date > b.date) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        isWrongCommand: false,\r\n        lastCommand: \"list\",\r\n        expensesData: [...sortedExpenses],\r\n      };\r\n\r\n    case \"CLEAR_COMMAND\":\r\n\r\n      const clearedDate = action.payload;\r\n      const clearIdx = state.expensesData.findIndex(\r\n        (item) => item.date === clearedDate\r\n      );\r\n      const toSubtract = state.expensesData[clearIdx].expenseBody;\r\n      const currentCurVal = state.currencyValues;\r\n\r\n      let subtractedValue = {}\r\n      \r\n      for (let i = 0; i < toSubtract.length; i++) {\r\n        if(!subtractedValue.hasOwnProperty(toSubtract[i][2])){\r\n          subtractedValue[toSubtract[i][2]] = +toSubtract[i][1];\r\n        }else{\r\n          subtractedValue[toSubtract[i][2]] += +toSubtract[i][1];\r\n        }\r\n      }\r\n\r\n       for (const key in subtractedValue) {\r\n\r\n         if (\r\n           currentCurVal.hasOwnProperty(key) &&\r\n           subtractedValue.hasOwnProperty(key)\r\n         ) {\r\n             currentCurVal[key] -= subtractedValue[key];\r\n           }\r\n\r\n       }\r\n\r\n      return {\r\n        ...state,\r\n        lastCommand: \"clear\",\r\n        isWrongCommand: false,\r\n        currencyValues: currentCurVal,\r\n        expensesData: [\r\n          ...state.expensesData.slice(0, clearIdx),\r\n          ...state.expensesData.slice(clearIdx + 1),\r\n        ],\r\n      };\r\n\r\n    case \"TOTAL_COMMAND\":\r\n\r\n      const curNeeded = action.payload; \r\n      const curCurrent = state.currencyValues;\r\n\r\n      const otherRate = state.rates[curNeeded]\r\n\r\n      let resValue = 0;\r\n\r\n      if (curNeeded === \"EUR\") {\r\n\r\n        for (const key in curCurrent) {\r\n          if(key === \"EUR\") {\r\n            resValue += +curCurrent[key];\r\n          } else {\r\n            resValue += curCurrent[key] / state.rates[key];\r\n          }\r\n        }\r\n\r\n      }else{\r\n\r\n          for (const key in curCurrent) {\r\n            resValue += (otherRate * curCurrent[key]) / state.rates[key];\r\n          }\r\n\r\n        }\r\n\r\n      return {\r\n        ...state,\r\n        lastCommand: \"total\",\r\n        isWrongCommand: false,\r\n        totalValue: {\r\n          value: resValue.toFixed(2),\r\n          currency: curNeeded,\r\n        },\r\n      };\r\n\r\n    case \"WRONG_COMMAND\":\r\n\r\n      return {\r\n        ...state,\r\n        isWrongCommand: true,\r\n      }\r\n\r\n    case \"FETCH_RATE_DATA_REQUESTED\":\r\n\r\n      return{\r\n        ...state,\r\n        loading: true,\r\n      }\r\n\r\n    case \"FETCH_RATE_DATA_FAILURE\":\r\n\r\n      return{\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n\r\n    case \"FETCH_RATE_DATA_SUCCESS\":\r\n\r\n      const resRates = action.payload.rates;\r\n\r\n      return {\r\n        ...state,\r\n        rates: resRates,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store; ","import React from \"react\";\r\n\r\nconst {\r\n  Provider: ServiceProvider,\r\n  Consumer: ServiceConsumer,\r\n} = React.createContext();\r\n\r\nexport { ServiceProvider, ServiceConsumer };\r\n","const addCommand = (payload) => {\r\n  return {\r\n    type: \"ADD_COMMAND\",\r\n    payload: payload,\r\n  }\r\n}\r\n\r\nconst listCommand = () => {\r\n  return {\r\n    type: \"LIST_COMMAND\"\r\n  }\r\n}\r\n\r\nconst clearCommand = (date) => {\r\n  return {\r\n    type: \"CLEAR_COMMAND\",\r\n    payload: date,\r\n  }\r\n}\r\n\r\nconst totalCommand = (curCode) => {\r\n  return {\r\n    type: \"TOTAL_COMMAND\",\r\n    payload: curCode,\r\n  };\r\n}\r\n\r\nconst wrongCommand = () => {\r\n  return {\r\n    type: \"WRONG_COMMAND\"\r\n  }\r\n}\r\n\r\nconst rateDataRequested = () => {\r\n  return {\r\n    type: \"FETCH_RATE_DATA_REQUESTED\",\r\n  };\r\n};\r\n\r\nconst rateDataLoaded = (newRateData) => {\r\n  return {\r\n    type: \"FETCH_RATE_DATA_SUCCESS\",\r\n    payload: newRateData,\r\n  };\r\n};\r\n\r\nconst rateDataError = (error) => {\r\n  return {\r\n    type: \"FETCH_RATE_DATA_FAILURE\",\r\n    payload: error,\r\n  };\r\n};\r\n\r\nconst fetchRate = ( service) => {\r\n  return (dispatch) => {\r\n    dispatch(rateDataRequested());\r\n    service\r\n      .getRates()\r\n      .then((res) => {\r\n        if (res.error) {\r\n          throw res.error;\r\n        }\r\n\r\n        dispatch(rateDataLoaded(res));\r\n        return res;\r\n      })\r\n      .catch((error) => {\r\n        dispatch(rateDataError(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport {\r\n  addCommand,\r\n  listCommand,\r\n  clearCommand,\r\n  totalCommand,\r\n  fetchRate,\r\n  wrongCommand,\r\n};","import CommandField from './command-field';\r\n\r\nexport default CommandField;","import React from \"react\";\r\nimport { ServiceConsumer } from \"../service-context\";\r\n\r\nconst withFixerService = () => (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <ServiceConsumer>\r\n        {(fixerService) => {\r\n          return <Wrapped {...props} fixerService={fixerService} />;\r\n        }}\r\n      </ServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withFixerService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {withFixerService} from \"../hoc\";\r\n\r\nimport {\r\n  addCommand,\r\n  listCommand,\r\n  clearCommand,\r\n  totalCommand,\r\n  fetchRate,\r\n  wrongCommand,\r\n} from \"../../actions\";\r\n\r\n\r\nconst CommandField = ({\r\n  addCommand,\r\n  listCommand,\r\n  clearCommand,\r\n  totalCommand,\r\n  wrongCommand,\r\n  fetchRate,\r\n  fixerService,\r\n  expensesData,\r\n  rates\r\n}) => {\r\n  const [commandText, setCommandText] = useState(\"\");\r\n\r\n  //formate for \"add\" command : \"add yyyy-mm-dd value carrencyCode productName\"\r\n  const commandBody = commandText.split(\" \");\r\n  const commandType = commandBody[0].toLowerCase();\r\n  const expenseDate = commandBody[1];\r\n  const addCurCode = commandBody[3];\r\n\r\n  //format for \"total\" command: \"total currencyCode\"\r\n  const totalCurCode = commandBody[1];\r\n  \r\n  \r\n  useEffect(() => {\r\n    fetchRate(fixerService);\r\n  }, [fetchRate, fixerService]);\r\n  \r\n  \r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    switch (commandType) {\r\n      case \"add\":\r\n\r\n        if (\r\n          commandBody.length < 4 ||\r\n          isNaN(commandBody[2]) ||\r\n          addCurCode.split(\"\").length !== 3 ||\r\n          !rates.hasOwnProperty(addCurCode.toUpperCase())\r\n        ) {\r\n          return wrongCommand();\r\n        }\r\n        setCommandText(\"\");\r\n        return addCommand(commandBody);\r\n\r\n      case \"list\":\r\n\r\n        if (commandBody.length > 1) {\r\n          return wrongCommand();\r\n        }\r\n\r\n        setCommandText(\"\");\r\n        return listCommand();\r\n\r\n      case \"clear\":\r\n\r\n        const idx = expensesData.findIndex((item) => item.date === expenseDate);\r\n\r\n        if(idx === -1){\r\n          return wrongCommand()\r\n        }\r\n\r\n        setCommandText(\"\");\r\n        return clearCommand(expenseDate);\r\n  \r\n      case \"total\":\r\n\r\n        if (\r\n          commandBody.length > 2 ||\r\n          !rates.hasOwnProperty(totalCurCode.toUpperCase())\r\n        ) {\r\n          return wrongCommand();\r\n        }\r\n\r\n        setCommandText(\"\");\r\n        return totalCommand(totalCurCode.toUpperCase());\r\n\r\n      default:\r\n        return wrongCommand()\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"w-50 mx-auto mt-3\">\r\n      <form onSubmit={onSubmit} className=\"d-block\">\r\n        <div className=\"d-flex flex-row\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setCommandText(e.target.value)}\r\n            placeholder=\"Enter the command\"\r\n            value={commandText}\r\n            className=\"form-control mr-3\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary w-25\">\r\n            Enter\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ expensesData, rates }) => {\r\n  return {\r\n    expensesData,\r\n    rates,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      addCommand,\r\n      listCommand,\r\n      clearCommand,\r\n      totalCommand,\r\n      fetchRate,\r\n      wrongCommand,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\n\r\nexport default withFixerService()(\r\n  connect(mapStateToProps, mapDispatchToProps)(CommandField)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ForAddListCommand = ({ expensesData }) => {\r\n  return (\r\n    <div className=\"w-50 mx-auto mt-3\">\r\n      <ul className=\"list-group\">\r\n        {expensesData.map((item, idx) => {\r\n          let expense = \"\";\r\n          for (let i = 0; i < item.expenseBody.length; i++) {\r\n            expense += `, ${item.expenseBody[i].join(\" \")}`;\r\n          }\r\n          return (\r\n            <li key={idx} className=\"list-group-item\">\r\n              {item.date} {expense}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ expensesData }) => {\r\n  return {\r\n    expensesData\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ForAddListCommand);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ForTotalCommand = ({ totalValue }) => {\r\n  return (\r\n    <div className=\"w-50 mx-auto mt-3\">\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">\r\n          {totalValue.value} {totalValue.currency}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ totalValue }) => {\r\n  return{\r\n    totalValue\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ForTotalCommand);","import React from 'react';\r\n\r\nconst ForWrongCommand = () => {\r\n  return (\r\n    <div className=\"w-50 mx-auto mt-3\">\r\n      <div>Please enter one of the available commands:</div>\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">\r\n          add date value currency product name\r\n        </li>\r\n        <li className=\"list-group-item\">list</li>\r\n        <li className=\"list-group-item\">clear date</li>\r\n        <li className=\"list-group-item\">total currency</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForWrongCommand;","import OutputArea from \"./output-area\";\r\n\r\nexport default OutputArea;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  ForAddListCommand,\r\n  ForTotalCommand,\r\n  ForWrongCommand,\r\n} from \"../outputs\";\r\n\r\nconst OutputArea = ({ lastCommand, isWrongCommand, expensesData }) => {\r\n  if (isWrongCommand || expensesData.length === 0) {\r\n    return <ForWrongCommand />;\r\n  }\r\n\r\n  if (lastCommand === \"total\") {\r\n    return <ForTotalCommand />;\r\n  }\r\n\r\n  return <ForAddListCommand />;\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  expensesData,\r\n  lastCommand,\r\n  isWrongCommand,\r\n}) => {\r\n  return {\r\n    expensesData,\r\n    lastCommand,\r\n    isWrongCommand,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)( OutputArea );","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport CommandField from '../command-field';\r\nimport OutputArea from \"../output-area\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <main className=\"container-sm text-center\">\r\n      <div className=\"mx-auto\">\r\n        <CommandField className=\"mx-auto\" />\r\n          <OutputArea />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"text-center bg-danger w-25 mx-auto mt-3 rounded-lg\">\r\n      <div>something has gone wrong</div>\r\n      <div>Please try again</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from \"./error-boundry\";\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport FixerService from './fixer-service';\nimport { ServiceProvider } from \"./components/service-context\";\n\nimport App from './components/app';\n\nimport ErrorBoundry from './components/error-boundry';\n\nconst fixerService = new FixerService()\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <ServiceProvider value={fixerService}>\n        <App />\n      </ServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export default class FixerService {\r\n\r\n  _apiUrl = \"http://data.fixer.io/api/latest?access_key=ebcfb092d311044b6a5e85e1980abdab\"\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url} +\r\n        , received ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  getRates = async (url = this._apiUrl) => {\r\n    const data = await this.getResource(url);\r\n    const res = this._transformRate(data);\r\n    return res\r\n  }\r\n\r\n  _transformRate = (fetchedObj) => {\r\n    return {\r\n      rates: fetchedObj.rates,\r\n    };\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}